{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport { ActivityIndicator, MD2Colors } from \"react-native-paper\";\nimport { AccountBackground, AccountCover, AccountContainer, AuthButton, AuthInput, ErrorContainer, BackButton, Title, ButtonsContainer, FormView } from \"../components/account.styles\";\nimport { Text } from \"../../../components/typography/text.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\nimport { AuthenticationContext } from \"../../../services/authentication/authentication.context\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    repeatedPassword = _useState6[0],\n    setRepeatedPassword = _useState6[1];\n  var _useContext = useContext(AuthenticationContext),\n    onRegister = _useContext.onRegister,\n    isLoading = _useContext.isLoading,\n    error = _useContext.error,\n    setError = _useContext.setError;\n  return _jsx(SafeArea, {\n    children: _jsx(AccountBackground, {\n      children: !isLoading ? _jsxs(ScrollView, {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        contentContainerStyle: {\n          flex: 1,\n          alignItems: \"center\"\n        },\n        showsVerticalScrollIndicator: false,\n        children: [_jsxs(AccountContainer, {\n          children: [_jsx(Title, {\n            children: \"CraftSeeker\"\n          }), _jsxs(FormView, {\n            children: [_jsx(AuthInput, {\n              label: \"E-mail\",\n              value: email,\n              textContentType: \"emailAddress\",\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\",\n              onChangeText: function onChangeText(u) {\n                return setEmail(u);\n              }\n            }), _jsx(Spacer, {\n              size: \"large\"\n            }), _jsx(AuthInput, {\n              label: \"Password\",\n              value: password,\n              textContentType: \"password\",\n              secureTextEntry: true,\n              autoCapitalize: \"none\",\n              onChangeText: function onChangeText(p) {\n                return setPassword(p);\n              }\n            }), _jsx(Spacer, {\n              size: \"large\"\n            }), _jsx(AuthInput, {\n              label: \"Repeat Password\",\n              value: repeatedPassword,\n              textContentType: \"password\",\n              secureTextEntry: true,\n              autoCapitalize: \"none\",\n              onChangeText: function onChangeText(p) {\n                return setRepeatedPassword(p);\n              }\n            }), error && _jsx(ErrorContainer, {\n              size: \"large\",\n              children: _jsx(Text, {\n                variant: \"error\",\n                children: error\n              })\n            })]\n          }), _jsx(Spacer, {\n            size: \"large\"\n          }), _jsx(ButtonsContainer, {\n            children: _jsx(AuthButton, {\n              icon: \"email\",\n              mode: \"outlined\",\n              onPress: function onPress() {\n                return onRegister(email, password, repeatedPassword);\n              },\n              children: \"Register\"\n            })\n          })]\n        }), _jsx(Spacer, {\n          size: \"large\"\n        }), _jsx(BackButton, {\n          mode: \"elevated\",\n          icon: \"keyboard-backspace\",\n          onPress: function onPress() {\n            setError(null);\n            navigation.goBack();\n          },\n          children: \"Back\"\n        })]\n      }) : _jsx(ActivityIndicator, {\n        animating: true,\n        color: MD2Colors.blue300\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","useState","useContext","ActivityIndicator","MD2Colors","AccountBackground","AccountCover","AccountContainer","AuthButton","AuthInput","ErrorContainer","BackButton","Title","ButtonsContainer","FormView","Text","Spacer","AuthenticationContext","ScrollView","SafeArea","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","repeatedPassword","setRepeatedPassword","_useContext","onRegister","isLoading","error","setError","children","style","width","height","contentContainerStyle","flex","alignItems","showsVerticalScrollIndicator","label","value","textContentType","keyboardType","autoCapitalize","onChangeText","u","size","secureTextEntry","p","variant","icon","mode","onPress","goBack","animating","color","blue300"],"sources":["C:/Users/med/Documents/TheisiÂµProject  worker/front/src/features/account/screens/register.screen.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport { ActivityIndicator, MD2Colors } from \"react-native-paper\";\n\nimport {\n  AccountBackground,\n  AccountCover,\n  AccountContainer,\n  AuthButton,\n  AuthInput,\n  ErrorContainer,\n  BackButton,\n  Title,\n  ButtonsContainer,\n  FormView,\n} from \"../components/account.styles\";\nimport { Text } from \"../../../components/typography/text.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\nimport { AuthenticationContext } from \"../../../services/authentication/authentication.context\";\nimport { ScrollView } from \"react-native\";\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\n\nexport const RegisterScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatedPassword, setRepeatedPassword] = useState(\"\");\n  const { onRegister, isLoading, error, setError } = useContext(\n    AuthenticationContext\n  );\n\n  return (\n    <SafeArea>\n      <AccountBackground>\n        {!isLoading ? (\n          <ScrollView\n            style={{ width: \"100%\", height: \"100%\" }}\n            contentContainerStyle={{\n              flex: 1,\n              alignItems: \"center\",\n            }}\n            showsVerticalScrollIndicator={false}\n          >\n            <AccountContainer>\n              <Title>CraftSeeker</Title>\n              <FormView>\n                <AuthInput\n                  label=\"E-mail\"\n                  value={email}\n                  textContentType=\"emailAddress\"\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                  onChangeText={(u) => setEmail(u)}\n                />\n                <Spacer size=\"large\" />\n                <AuthInput\n                  label=\"Password\"\n                  value={password}\n                  textContentType=\"password\"\n                  secureTextEntry\n                  autoCapitalize=\"none\"\n                  onChangeText={(p) => setPassword(p)}\n                />\n\n                <Spacer size=\"large\" />\n                <AuthInput\n                  label=\"Repeat Password\"\n                  value={repeatedPassword}\n                  textContentType=\"password\"\n                  secureTextEntry\n                  autoCapitalize=\"none\"\n                  onChangeText={(p) => setRepeatedPassword(p)}\n                />\n                {error && (\n                  <ErrorContainer size=\"large\">\n                    <Text variant=\"error\">{error}</Text>\n                  </ErrorContainer>\n                )}\n              </FormView>\n\n              <Spacer size=\"large\" />\n              <ButtonsContainer>\n                <AuthButton\n                  icon=\"email\"\n                  mode=\"outlined\"\n                  onPress={() => onRegister(email, password, repeatedPassword)}\n                >\n                  Register\n                </AuthButton>\n              </ButtonsContainer>\n            </AccountContainer>\n            <Spacer size=\"large\" />\n            <BackButton\n              mode=\"elevated\"\n              icon=\"keyboard-backspace\"\n              onPress={() => {\n                setError(null);\n                navigation.goBack();\n              }}\n            >\n              Back\n            </BackButton>\n          </ScrollView>\n        ) : (\n          <ActivityIndicator animating={true} color={MD2Colors.blue300} />\n        )}\n      </AccountBackground>\n    </SafeArea>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}